package small.business.swing.gui.repair;

import config.AppContext;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import org.apache.log4j.Logger;
import org.springframework.context.ApplicationContext;
import small.business.businesslayer.DevicesInRepairService;
import small.business.businesslayer.NomenclatureService;
import small.business.dao.entity.Nomenclature;
import small.business.dao.entity.PartsForRepairDevices;
import small.business.swing.gui.nomenclature.NomenclatureSelectJFrame;
import small.business.swing.gui.utils.ModalFrameUtil;
import small.business.u18n.Languages;

/**
 *
 * @author ihor
 */
public class DevicesInRepairJFrame extends javax.swing.JFrame {

    private static final long serialVersionUID = 1L;
    static Logger log = Logger.getLogger(DevicesInRepairJFrame.class.getName());
    private ApplicationContext ctx = AppContext.getApplicationContext();
    private DevicesInRepairService devicesInRepairService = (DevicesInRepairService) ctx.getBean("devicesInRepairService");
    private NomenclatureService nomenclatureService = (NomenclatureService) ctx.getBean("nomenclatureService");

    /**
     * Creates new form DevicesInRepairJFrame
     */
    public DevicesInRepairJFrame() {
        initComponents();
        jTextFieldTitle.setText(devicesInRepairService.getCurrentElement().getTitle());
        jTextAreaInfo.setText(devicesInRepairService.getCurrentElement().getInfo());
        devicesInRepairService.setCurrentParts(null);
        getPartsOfDevice();
        svalidate();
    }

    private void getPartsOfDevice() {
        DefaultTableModel dataModel = (DefaultTableModel) jTable.getModel();
        dataModel.setRowCount(0);
        for (PartsForRepairDevices e : devicesInRepairService.getCurrentElement().getPartsForRepairDevices()) {
            Object[] g = new Object[]{e, e.getNomenclature().getTitle()};
            dataModel.addRow(g);
        }
        jTable.setModel(dataModel);
    }

    private void partsValidate() {
        devicesInRepairService.setCurrentParts(null);
        if (jTable.getSelectedRow() >= 0) {
            PartsForRepairDevices selected = (PartsForRepairDevices) jTable.getValueAt(jTable.getSelectedRow(), 0);
            devicesInRepairService.setCurrentParts(selected);
        }
        svalidate();
    }

    private void svalidate() {
        devicesInRepairService.getValidateElement().setTitle(jTextFieldTitle.getText());
        devicesInRepairService.getValidateElement().setInfo(jTextAreaInfo.getText());
        devicesInRepairService.validate();
        jButtonSave.setEnabled(devicesInRepairService.getCanSave());
        jButtonRemoveParts.setEnabled(devicesInRepairService.isCanRemoveParts());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabelTitle = new javax.swing.JLabel();
        jTextFieldTitle = new javax.swing.JTextField();
        jScrollPaneInfo = new javax.swing.JScrollPane();
        jTextAreaInfo = new javax.swing.JTextArea();
        jLabelInfo = new javax.swing.JLabel();
        jButtonSave = new javax.swing.JButton();
        jButtonCancel = new javax.swing.JButton();
        jButtonAdd = new javax.swing.JButton();
        jButtonRemoveParts = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle(Languages.getTranslatedText("createEditCaption"));

        jLabelTitle.setText(Languages.getTranslatedText("title"));

        jTextFieldTitle.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextFieldTitleKeyReleased(evt);
            }
        });

        jTextAreaInfo.setColumns(20);
        jTextAreaInfo.setRows(5);
        jTextAreaInfo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextAreaInfoKeyReleased(evt);
            }
        });
        jScrollPaneInfo.setViewportView(jTextAreaInfo);

        jLabelInfo.setText(Languages.getTranslatedText("additionalInfo"));

        jButtonSave.setIcon(new javax.swing.ImageIcon(getClass().getResource("/small/business/swing/gui/images/save.png"))); // NOI18N
        jButtonSave.setText(Languages.getTranslatedText("save"));
        jButtonSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSaveActionPerformed(evt);
            }
        });

        jButtonCancel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/small/business/swing/gui/images/exit.png"))); // NOI18N
        jButtonCancel.setText(Languages.getTranslatedText("cancel"));
        jButtonCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCancelActionPerformed(evt);
            }
        });

        jButtonAdd.setIcon(new javax.swing.ImageIcon(getClass().getResource("/small/business/swing/gui/images/add.png"))); // NOI18N
        jButtonAdd.setText(Languages.getTranslatedText("add"));
        jButtonAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAddActionPerformed(evt);
            }
        });

        jButtonRemoveParts.setIcon(new javax.swing.ImageIcon(getClass().getResource("/small/business/swing/gui/images/delete.png"))); // NOI18N
        jButtonRemoveParts.setText(Languages.getTranslatedText("remove"));
        jButtonRemoveParts.setEnabled(false);
        jButtonRemoveParts.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonRemovePartsActionPerformed(evt);
            }
        });

        jTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "id", ""
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable.getTableHeader().setReorderingAllowed(false);
        jTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableMouseClicked(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jTableMouseReleased(evt);
            }
        });
        jScrollPane1.setViewportView(jTable);
        jTable.getColumnModel().getColumn(0).setPreferredWidth(60);
        jTable.getColumnModel().getColumn(0).setMaxWidth(60);
        jTable.getColumnModel().getColumn(1).setResizable(false);
        jTable.getColumnModel().getColumn(1).setHeaderValue(Languages.getTranslatedText("title"));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTextFieldTitle)
                    .addComponent(jScrollPaneInfo)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jButtonSave)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonCancel))
                    .addComponent(jLabelTitle)
                    .addComponent(jLabelInfo)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButtonAdd)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonRemoveParts))
                    .addComponent(jScrollPane1))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabelTitle)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextFieldTitle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabelInfo)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPaneInfo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButtonAdd)
                    .addComponent(jButtonRemoveParts))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 103, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonSave)
                    .addComponent(jButtonCancel))
                .addGap(3, 3, 3))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTextFieldTitleKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldTitleKeyReleased
        svalidate();
    }//GEN-LAST:event_jTextFieldTitleKeyReleased

    private void jTextAreaInfoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextAreaInfoKeyReleased
        svalidate();
    }//GEN-LAST:event_jTextAreaInfoKeyReleased

    private void jButtonSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSaveActionPerformed
        devicesInRepairService.getCurrentElement().setTitle(jTextFieldTitle.getText());
        devicesInRepairService.getCurrentElement().setInfo(jTextAreaInfo.getText());
        devicesInRepairService.saveOrUpdate();
        dispose();
    }//GEN-LAST:event_jButtonSaveActionPerformed

    private void jButtonCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCancelActionPerformed
        dispose();
    }//GEN-LAST:event_jButtonCancelActionPerformed

    private void jButtonAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAddActionPerformed
        nomenclatureService.setSelectType(Nomenclature.NOMENCLATURE);
        NomenclatureSelectJFrame ns = new NomenclatureSelectJFrame();
        ns.pack();
        ModalFrameUtil.showAsModal(ns, this);
        if (nomenclatureService.getSelectedElement() != null) {
            devicesInRepairService.getCurrentElement().getPartsForRepairDevices().add(new PartsForRepairDevices(nomenclatureService.getSelectedElement()));
            getPartsOfDevice();
        }
    }//GEN-LAST:event_jButtonAddActionPerformed

    private void jButtonRemovePartsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonRemovePartsActionPerformed
        int confirm = JOptionPane.showConfirmDialog(this, Languages.getTranslatedText("removeConfirm"), "", JOptionPane.YES_NO_OPTION);
        if ((jTable.getSelectedRow() >= 0) && (confirm == JOptionPane.YES_OPTION)) {
            devicesInRepairService.getCurrentElement().getPartsForRepairDevices().remove(devicesInRepairService.getCurrentParts());
            getPartsOfDevice();
        }
    }//GEN-LAST:event_jButtonRemovePartsActionPerformed

    private void jTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableMouseClicked
        partsValidate();
    }//GEN-LAST:event_jTableMouseClicked

    private void jTableMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableMouseReleased
        partsValidate();
    }//GEN-LAST:event_jTableMouseReleased

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DevicesInRepairJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DevicesInRepairJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DevicesInRepairJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DevicesInRepairJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new DevicesInRepairJFrame().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonAdd;
    private javax.swing.JButton jButtonCancel;
    private javax.swing.JButton jButtonRemoveParts;
    private javax.swing.JButton jButtonSave;
    private javax.swing.JLabel jLabelInfo;
    private javax.swing.JLabel jLabelTitle;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPaneInfo;
    private javax.swing.JTable jTable;
    private javax.swing.JTextArea jTextAreaInfo;
    private javax.swing.JTextField jTextFieldTitle;
    // End of variables declaration//GEN-END:variables
}